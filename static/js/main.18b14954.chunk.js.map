{"version":3,"sources":["components/GoodsList.tsx","components/Button.tsx","App.tsx","index.tsx"],"names":["SortType","Button","props","name","action","type","className","onClick","GoodsList","state","isReversed","sortBy","SortOff","availableLengths","productLength","reverse","setState","sortAlphabetically","Alphabetically","sortByLength","ByLength","reset","handleLengthChange","event","value","target","goods","this","visibleGoods","filter","item","length","Number","sort","firstItem","secondItem","localeCompare","onChange","map","product","React","Component","goodsFromServer","App","isGoodsListVisible","showGoodsList","ReactDOM","render","document","getElementById"],"mappings":"sLAIKA,E,iFCGQC,EAA0B,SAACC,GACtC,IAAQC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,OAEd,OACE,wBACEC,KAAK,SACLC,UAAU,0BACVC,QAASH,EAHX,SAKGD,M,SDZFH,O,mCAAAA,I,uBAAAA,I,sBAAAA,M,KAiBE,IAAMQ,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,OAAQX,EAASY,QACjBC,iBAAkB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAChEC,cAAe,KALnB,EAQEC,QAAU,WACR,EAAKC,UAAS,SAAAP,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAVzB,EAcEO,mBAAqB,WACnB,EAAKD,SAAS,CAAEL,OAAQX,EAASkB,kBAfrC,EAkBEC,aAAe,WACb,EAAKH,SAAS,CAAEL,OAAQX,EAASoB,YAnBrC,EAsBEC,MAAQ,WACN,EAAKL,SAAS,CACZN,YAAY,EACZC,OAAQX,EAASY,QACjBE,cAAe,OA1BrB,EA8BEQ,mBAAqB,SAACC,GACpB,IAAQC,EAAUD,EAAME,OAAhBD,MAER,EAAKR,SAAS,CAAEF,cAAeU,KAjCnC,4CAoCE,WACE,IAAQE,EAAUC,KAAKzB,MAAfwB,MACR,EAKIC,KAAKlB,MAJPC,EADF,EACEA,WACAC,EAFF,EAEEA,OACAE,EAHF,EAGEA,iBACAC,EAJF,EAIEA,cAEIc,EAAeF,EAAMG,QACzB,SAAAC,GAAI,OAAIA,EAAKC,OAASC,OAAOlB,MAoB/B,OAjBAc,EAAaK,MAAK,SAACC,EAAWC,GAC5B,OAAQxB,GACN,KAAKX,EAASkB,eACZ,OAAOgB,EAAUE,cAAcD,GAEjC,KAAKnC,EAASoB,SACZ,OAAOc,EAAUH,OAASI,EAAWJ,OAEvC,QACE,OAAO,MAITrB,GACFkB,EAAab,UAIb,oCACE,uDACA,wBACEZ,KAAK,gBACLG,UAAU,cACVkB,MAAOV,EACPuB,SAAUV,KAAKL,mBAJjB,SAMGT,EAAiByB,KAAI,SAAAP,GAAM,OAC1B,wBAAQP,MAAOO,EAAf,SACGA,SAKP,oBAAIzB,UAAU,aAAd,SACGsB,EAAaU,KAAI,SAAAC,GAAO,OACvB,oBAAIjC,UAAU,kBAAd,SACGiC,GADkCA,QAMzC,sBAAKjC,UAAU,eAAf,UACE,cAAC,EAAD,CACEH,KAAK,UACLC,OAAQuB,KAAKZ,UAGf,cAAC,EAAD,CACEZ,KAAK,sBACLC,OAAQuB,KAAKV,qBAGf,cAAC,EAAD,CACEd,KAAK,iBACLC,OAAQuB,KAAKR,eAGf,cAAC,EAAD,CACEhB,KAAK,QACLC,OAAQuB,KAAKN,kBA3GzB,GAA+BmB,IAAMC,WEhB/BC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAmCaC,E,4MA3BblC,MAAe,CACbmC,oBAAoB,G,EAGtBC,cAAgB,WACd,EAAK7B,SAAS,CAAE4B,oBAAoB,K,4CAGtC,WACE,IAAQA,EAAuBjB,KAAKlB,MAA5BmC,mBAER,OACE,sBAAKtC,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,mBACCsC,EACG,cAAC,EAAD,CAAWlB,MAAOgB,IAElB,cAAC,EAAD,CACEvC,KAAK,QACLC,OAAQuB,KAAKkB,uB,GApBTL,IAAMC,WCnBxBK,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.18b14954.chunk.js","sourcesContent":["import React from 'react';\nimport './GoodsList.css';\nimport { Button } from './Button';\n\nenum SortType {\n  Alphabetically,\n  ByLength,\n  SortOff,\n}\n\ntype Props = {\n  goods: string[];\n};\n\ntype State = {\n  isReversed: boolean;\n  sortBy: SortType;\n  availableLengths: string[];\n  productLength: string;\n};\n\nexport class GoodsList extends React.Component<Props, State> {\n  state: State = {\n    isReversed: false,\n    sortBy: SortType.SortOff,\n    availableLengths: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\n    productLength: '1',\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortBy: SortType.Alphabetically });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortBy: SortType.ByLength });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortBy: SortType.SortOff,\n      productLength: '1',\n    });\n  };\n\n  handleLengthChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    this.setState({ productLength: value });\n  };\n\n  render() {\n    const { goods } = this.props;\n    const {\n      isReversed,\n      sortBy,\n      availableLengths,\n      productLength,\n    } = this.state;\n    const visibleGoods = goods.filter(\n      item => item.length > Number(productLength),\n    );\n\n    visibleGoods.sort((firstItem, secondItem) => {\n      switch (sortBy) {\n        case SortType.Alphabetically:\n          return firstItem.localeCompare(secondItem);\n\n        case SortType.ByLength:\n          return firstItem.length - secondItem.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <section>\n        <p>Choose product length:</p>\n        <select\n          name=\"productLength\"\n          className=\"form-select\"\n          value={productLength}\n          onChange={this.handleLengthChange}\n        >\n          {availableLengths.map(length => (\n            <option value={length}>\n              {length}\n            </option>\n          ))}\n        </select>\n\n        <ul className=\"list-group\">\n          {visibleGoods.map(product => (\n            <li className=\"list-group-item\" key={product}>\n              {product}\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"list-buttons\">\n          <Button\n            name=\"Reverse\"\n            action={this.reverse}\n          />\n\n          <Button\n            name=\"Sort alphabetically\"\n            action={this.sortAlphabetically}\n          />\n\n          <Button\n            name=\"Sort by length\"\n            action={this.sortByLength}\n          />\n\n          <Button\n            name=\"Reset\"\n            action={this.reset}\n          />\n        </div>\n      </section>\n    );\n  }\n}\n","import React from 'react';\n\ntype Props = {\n  name: string;\n  action: () => void;\n};\n\nexport const Button: React.FC<Props> = (props) => {\n  const { name, action } = props;\n\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-outline-primary\"\n      onClick={action}\n    >\n      {name}\n    </button>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList';\nimport { Button } from './components/Button';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  isGoodsListVisible: boolean;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    isGoodsListVisible: false,\n  };\n\n  showGoodsList = () => {\n    this.setState({ isGoodsListVisible: true });\n  };\n\n  render() {\n    const { isGoodsListVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">Goods</h1>\n        {isGoodsListVisible\n          ? <GoodsList goods={goodsFromServer} />\n          : (\n            <Button\n              name=\"Start\"\n              action={this.showGoodsList}\n            />\n          )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}